consumes:
- application/json
info:
  title: Db Server
  version: 0.1.0
paths:
  /list/{topic}:
    get:
      parameters:
        - in: path
          name: topic
          type: string
          required: true
          description: Topic name
        - in: header
          name: db-key
          type: string
          required: true
          description: Db key
      responses:
        200:
          description: list the topic records
          schema:
            type: array
        403:
          description: Not allowed for this key

  /find/{topic}:
    post:
      parameters:
        - in: path
          name: topic
          type: string
          required: true
          description: Topic name
        - in: header
          name: db-key
          type: string
          required: true
          description: Db key
      responses:
        200:
          description: list the topic records
          schema:
            type: array
        403:
          description: Not allowed for this key
  /push/{topic}:
    post:
      parameters:
        - in: path
          name: topic
          type: string
          required: true
          description: Topic name
        - in: header
          name: db-key
          type: string
          required: true
          description: Db key
      responses:
        200:
          description: push message to topic
        403:
          description: Not allowed for this key
  /push/{topic}/{id}:
    patch:
      parameters:
        - in: path
          name: topic
          type: string
          required: true
          description: Topic name
        - in: path
          name: id
          type: string
          required: true
          description: Message id to update
        - in: header
          name: db-key
          type: string
          required: true
          description: Db key
      responses:
        200:
          description: update message in topic
        403:
          description: Not allowed for this key

  /api/user/auth:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          description: Login user.
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: result
          schema:
            type: array


  /api/user/register:
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          description: Create user.
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: result
          schema:
            type: array


  /api/user/me:
    get:
      security:
        - bearerAuth: []
      responses:
        200:
          description: list the topic records
          schema:
            type: array

  /api/storage:
    post:
      security:
        - bearerAuth: []
      summary: Uploads a file.
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: The file to upload.
      responses:
        200:
          description: result and path
          schema:
            type: array

produces:
- application/json
schemes:
- http

host:
  localhost:8080
swagger: "2.0"
