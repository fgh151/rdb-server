// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://openitstudio.ru",
            "email": "fedor@support-pc.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/auth": {
            "post": {
                "description": "Authenticate in admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Login to admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email for login",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Password for login",
                        "name": "password",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/admin/cf": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List cloud functions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud functions",
                    "Admin"
                ],
                "summary": "List cloud functions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CloudFunction"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create cloud function",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud functions",
                    "Admin"
                ],
                "summary": "Create cloud function",
                "parameters": [
                    {
                        "description": "Function info",
                        "name": "cf",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CloudFunction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CloudFunction"
                        }
                    }
                }
            }
        },
        "/admin/cf/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Function detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud functions",
                    "Admin"
                ],
                "summary": "Function info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cf id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CloudFunction"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update cloud function",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud functions",
                    "Admin"
                ],
                "summary": "Update cloud function",
                "parameters": [
                    {
                        "description": "Source info",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DataSource"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Function id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataSource"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete cloud function",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud functions",
                    "Admin"
                ],
                "summary": "Delete cloud function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cf id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/cf/{id}/log": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Cloud function logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud functions",
                    "Admin"
                ],
                "summary": "Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fuc id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CloudFunctionLog"
                        }
                    }
                }
            }
        },
        "/admin/config": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config manager",
                    "Admin"
                ],
                "summary": "List configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Config"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config manager",
                    "Admin"
                ],
                "summary": "Create config",
                "parameters": [
                    {
                        "description": "Config info",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/admin/config/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Config detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config manager",
                    "Admin"
                ],
                "summary": "Config info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Config id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Config"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config manager",
                    "Admin"
                ],
                "summary": "Update config",
                "parameters": [
                    {
                        "description": "Config info",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Config"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Config id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Config"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config manager",
                    "Admin"
                ],
                "summary": "Delete config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Config id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/cron": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List cron jobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cron",
                    "Admin"
                ],
                "summary": "List cron jobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CronJob"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create cron job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cron",
                    "Admin"
                ],
                "summary": "Create cron job",
                "parameters": [
                    {
                        "description": "Push info",
                        "name": "cron",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                }
            }
        },
        "/admin/cron/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Cron job detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cron",
                    "Admin"
                ],
                "summary": "Cron job info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Push id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update cron job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cron",
                    "Admin"
                ],
                "summary": "Update cron job",
                "parameters": [
                    {
                        "description": "Cron job info",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Cron id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CronJob"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete cron job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cron",
                    "Admin"
                ],
                "summary": "Delete cron job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cron id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/ds": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List data sources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "List data sources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DataSource"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create data source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "Create data source",
                "parameters": [
                    {
                        "description": "Data source info",
                        "name": "ds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DataSource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataSource"
                        }
                    }
                }
            }
        },
        "/admin/ds/dse/{dsId}": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create data source endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "Create data source endpoint",
                "parameters": [
                    {
                        "description": "Data source info",
                        "name": "dse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DataSourceEndpoint"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Data source id",
                        "name": "dsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataSourceEndpoint"
                        }
                    }
                }
            }
        },
        "/admin/ds/dse/{dsId}/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Data source endpoint detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "Data source endpoint info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data source id",
                        "name": "dsId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataSource"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update date source endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "Update date source endpoint",
                "parameters": [
                    {
                        "description": "Endpoint info",
                        "name": "dse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DataSourceEndpoint"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data source id",
                        "name": "dsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataSourceEndpoint"
                        }
                    }
                }
            }
        },
        "/admin/ds/{dsIid}/dse": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List data source endpoints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "List data source endpoints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data source id",
                        "name": "dsIid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DataSourceEndpoint"
                            }
                        }
                    }
                }
            }
        },
        "/admin/ds/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Data source detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "Data source info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataSource"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update date source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "Update date source",
                "parameters": [
                    {
                        "description": "Source info",
                        "name": "source",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DataSource"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Source info",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DataSource"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete data source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "Delete data source",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ds id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/em/list/{topic}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List topic records for admin access",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager",
                    "Admin"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/admin/pl": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List pipelines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline",
                    "Admin"
                ],
                "summary": "List pipelines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pipeline"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create pipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline",
                    "Admin"
                ],
                "summary": "Create pipeline",
                "parameters": [
                    {
                        "description": "Pipeline info",
                        "name": "pl",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    }
                }
            }
        },
        "/admin/pl/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Pipeline detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline",
                    "Admin"
                ],
                "summary": "Pipeline info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update pipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline",
                    "Admin"
                ],
                "summary": "Update pipeline",
                "parameters": [
                    {
                        "description": "Pipeline info",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Pipeline id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pipeline"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete pipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pipeline",
                    "Admin"
                ],
                "summary": "Delete pipeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pipeline id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/push": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List push messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Push messages",
                    "Admin"
                ],
                "summary": "List push messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PushMessage"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create push message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Push messages",
                    "Admin"
                ],
                "summary": "Create push message",
                "parameters": [
                    {
                        "description": "Push info",
                        "name": "push",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PushMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PushMessage"
                        }
                    }
                }
            }
        },
        "/admin/push/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Push detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Push messages",
                    "Admin"
                ],
                "summary": "Push info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Push id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PushMessage"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update push",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Push messages",
                    "Admin"
                ],
                "summary": "Update push",
                "parameters": [
                    {
                        "description": "push info",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PushMessage"
                        }
                    },
                    {
                        "type": "string",
                        "description": "push id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PushMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete push",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Push messages",
                    "Admin"
                ],
                "summary": "Delete push",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Push id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/topics": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List topics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TopicOutput"
                ],
                "summary": "List topics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Project"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager",
                    "Admin"
                ],
                "summary": "Create topic",
                "parameters": [
                    {
                        "description": "topic info",
                        "name": "topic",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            }
        },
        "/admin/topics/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "topic detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager",
                    "Admin"
                ],
                "summary": "TopicOutput",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TopicOutput id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager",
                    "Admin"
                ],
                "summary": "Update topic",
                "parameters": [
                    {
                        "description": "Project info",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Project id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager",
                    "Admin"
                ],
                "summary": "Delete topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TopicOutput id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/topics/{topic}/data": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "topic data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager",
                    "Admin"
                ],
                "summary": "TopicOutput data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TopicOutput name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "List users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User",
                    "Admin"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "User detail info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User",
                    "Admin"
                ],
                "summary": "User info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User",
                    "Admin"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User info",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User",
                    "Admin"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/api/cf/{id}/run": {
            "get": {
                "description": "Run function with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud functions",
                    "Public Api"
                ],
                "summary": "Run function",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth key",
                        "name": "db-key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Function id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/cf/{id}/run/{rid}": {
            "get": {
                "description": "List logs of function run",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cloud functions",
                    "Public Api"
                ],
                "summary": "List logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth key",
                        "name": "db-key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Function id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Run id",
                        "name": "rid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CloudFunctionLog"
                        }
                    }
                }
            }
        },
        "/api/device/register": {
            "post": {
                "description": "Register device to receive push",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Push messages",
                    "Public Api"
                ],
                "summary": "Register device",
                "parameters": [
                    {
                        "description": "Device info",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserDevice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserDevice"
                        }
                    }
                }
            }
        },
        "/api/push/subscribe/{deviceId}": {
            "get": {
                "description": "Socket subscribe to push notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Push messages"
                ],
                "summary": "Subscribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device id to subscribe",
                        "name": "deviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/api/push/{id}/run": {
            "get": {
                "description": "Send push with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Push messages",
                    "Public Api"
                ],
                "summary": "Send push",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth key",
                        "name": "db-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Push id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/storage": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Put file to storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage",
                    "Admin"
                ],
                "summary": "Put file to storage",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/auth": {
            "post": {
                "description": "Authenticate via api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User",
                    "Public Api"
                ],
                "summary": "Login via api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email for login",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Password for login",
                        "name": "password",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/api/user/me": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Get current user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User",
                    "Public Api"
                ],
                "summary": "User info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email for login",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Password for login",
                        "name": "password",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "description": "Register via api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User",
                    "Public Api"
                ],
                "summary": "Register via api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email for login",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Password for login",
                        "name": "password",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/config/{id}": {
            "get": {
                "description": "Get config by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config manager",
                    "Public Api"
                ],
                "summary": "Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Config id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/ds/dse/{dsId}/{id}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Delete data source endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Admin"
                ],
                "summary": "Delete data source endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data source endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data source id",
                        "name": "dsId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/dse/{id}": {
            "get": {
                "description": "Get data source by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data source",
                    "Public Api"
                ],
                "summary": "Get item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth key",
                        "name": "db-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                }
            }
        },
        "/em/find/{topic}": {
            "get": {
                "description": "Search in topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager"
                ],
                "summary": "Search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/em/list/{topic}": {
            "get": {
                "description": "List topic records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/em/subscribe/{topic}/{key}": {
            "get": {
                "description": "Socket subscribe to topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager"
                ],
                "summary": "Subscribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Db key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/em/{topic}": {
            "post": {
                "description": "Create topic record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/em/{topic}/{id}": {
            "delete": {
                "description": "Delete entity record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Topic record id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update entity record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity manager"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic name",
                        "name": "topic",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Topic record id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CloudFunction": {
            "type": "object",
            "properties": {
                "container": {
                    "description": "Container name\nexample: docker.io/library/alpine",
                    "type": "string"
                },
                "env": {
                    "description": "Container env variables",
                    "type": "string"
                },
                "id": {
                    "description": "The function UUID\nexample: 6204037c-30e6-408b-8aaa-dd8219860b4b",
                    "type": "string"
                },
                "params": {
                    "description": "Container run params\nexample: echo test",
                    "type": "string"
                },
                "project": {
                    "description": "Linked project",
                    "$ref": "#/definitions/models.Project"
                },
                "project_id": {
                    "description": "The project UUID\nexample: 6204037c-30e6-403b-8aaa-dd8219860b4b",
                    "type": "string"
                },
                "run_count": {
                    "description": "Function run count",
                    "type": "integer"
                },
                "title": {
                    "description": "Function title",
                    "type": "string"
                }
            }
        },
        "models.CloudFunctionLog": {
            "type": "object",
            "properties": {
                "function_id": {
                    "description": "The function UUID\nexample: 6204037c-30e6-408b-8aaa-dd8219520b4b",
                    "type": "string"
                },
                "id": {
                    "description": "The log UUID\nexample: 6204037c-30e6-408b-8aaa-dd8219860b4b",
                    "type": "string"
                },
                "result": {
                    "description": "Run result",
                    "type": "string"
                },
                "run_at": {
                    "description": "Run date time",
                    "type": "string"
                }
            }
        },
        "models.Config": {
            "type": "object",
            "properties": {
                "body": {},
                "id": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/models.Project"
                },
                "project_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.CreateUserForm": {
            "type": "object",
            "properties": {
                "Email": {
                    "description": "new User email",
                    "type": "string"
                },
                "Password": {
                    "description": "new User password",
                    "type": "string"
                }
            }
        },
        "models.CronJob": {
            "type": "object",
            "properties": {
                "function": {
                    "$ref": "#/definitions/models.CloudFunction"
                },
                "function_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "time_params": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.DataSource": {
            "type": "object",
            "properties": {
                "cache": {
                    "description": "Cache result in local db",
                    "type": "boolean"
                },
                "dsn": {
                    "description": "Data source dsn",
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DataSourceEndpoint"
                    }
                },
                "id": {
                    "description": "The data source UUID\nexample: 6204011c-30e6-408b-8aaa-dd8219860b4b",
                    "type": "string"
                },
                "project": {
                    "description": "Linked project",
                    "$ref": "#/definitions/models.Project"
                },
                "project_id": {
                    "description": "Linked project  UUID\nexample: 6204011c-30e6-408b-8aaa-dd8214860b4b",
                    "type": "string"
                },
                "title": {
                    "description": "Data source title",
                    "type": "string"
                },
                "type": {
                    "description": "The data source type\nEnum of DsType\nexample: Mysql",
                    "type": "string"
                }
            }
        },
        "models.DataSourceEndpoint": {
            "type": "object",
            "properties": {
                "dataSource": {
                    "description": "Linked data source",
                    "$ref": "#/definitions/models.DataSource"
                },
                "data_source": {
                    "description": "Linked data source UUID\nexample: 6204011c-33e6-408b-8aaa-dd8214860b4b",
                    "type": "string"
                },
                "id": {
                    "description": "The data source endpoint UUID\nexample: 6234011c-30e6-408b-8aaa-dd8219860b4b",
                    "type": "string"
                },
                "table_name": {
                    "description": "Endpoint table name",
                    "type": "string"
                },
                "title": {
                    "description": "Data source endpoint title",
                    "type": "string"
                }
            }
        },
        "models.Pipeline": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The pipeline UUID\nexample: 6204037c-30e6-418b-8aaa-dd8219860b4b",
                    "type": "string"
                },
                "input": {
                    "description": "Input type",
                    "type": "string"
                },
                "input_id": {
                    "description": "The pipeline input UUID\nexample: 6204037c-30e6-418b-8saa-dd8219860b4b",
                    "type": "string"
                },
                "output": {
                    "description": "Output type",
                    "type": "string"
                },
                "output_id": {
                    "description": "The pipeline output UUID\nexample: 6204037c-30e6-413b-8saa-dd8219860b4b",
                    "type": "string"
                },
                "title": {
                    "description": "Mnemonic name",
                    "type": "string"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "origins": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "models.PushMessage": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payload": {},
                "receivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserDevice"
                    }
                },
                "sent": {
                    "type": "boolean"
                },
                "sent_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "Is user active",
                    "type": "boolean"
                },
                "admin": {
                    "description": "Is user admin",
                    "type": "boolean"
                },
                "created_at": {
                    "description": "Created at date time",
                    "type": "string"
                },
                "devices": {
                    "description": "user devices",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserDevice"
                    }
                },
                "email": {
                    "description": "User email",
                    "type": "string"
                },
                "id": {
                    "description": "The user UUID\nexample: 6204037c-30e6-408b-8aaa-dd8219860b4b",
                    "type": "string"
                },
                "last_login": {
                    "description": "Last login date time",
                    "type": "string"
                },
                "token": {
                    "description": "Auth token",
                    "type": "string"
                }
            }
        },
        "models.UserDevice": {
            "type": "object",
            "properties": {
                "device": {
                    "description": "Device type can be android | ios | macos | windows | linux | web\nexample: 'linux'",
                    "type": "string"
                },
                "device_token": {
                    "description": "UUID Device Token\n9f80fcc8-0102-4795-94c0-4190c168ffc2",
                    "type": "string"
                },
                "id": {
                    "description": "The UUID of a device\nexample: 6204037c-30e6-408b-8aaa-dd8219860b4b",
                    "type": "string"
                },
                "user_id": {
                    "description": "The UUID of owned user\nexample: 6204037c-30e6-408b-8aaa-dd8219860b4b",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Db server API",
	Description:      "Db server API description.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
